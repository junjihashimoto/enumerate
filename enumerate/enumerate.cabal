-- Initial enumerate.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                enumerate
version:             0.2.3
synopsis:            enumerate all the values in a finite type (automatically)
description:
  provides
  .
    * (1) a typeclass for enumerating all values in a finite type,
    * (2) a generic instance for automatic deriving, and
    * (3) helpers that reify functions (partial or total, monadic or pure)
    into a Map.
  .
  see the "Enumerable" module for extensive documentation.

homepage:            https://github.com/sboosali/enumerate
license:             MIT
license-file:        LICENSE
author:              Sam Boosalis
maintainer:          samboosalis@gmail.com
-- copyright:
category:            Data
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

tested-with: 
 GHC == 8.0.2
 GHC == 8.2.2
-- `multi-ghc-travis` uses `Tested-With`. 
-- ..\multi-ghc-travis\make_travis_yml.hs enumerate.cabal > .travis.yml

flag orphans
  default: False
  description: Implement orphan instances for some types in `base`. Either way, they are not exported by default (by the root module).
  manual: True

source-repository head
  type:     git
  location: https://github.com/sboosali/enumerate

flag dump-core
  description: Dump HTML for the core generated by GHC during compilation
  default:     False


library
 hs-source-dirs:      sources

--TODO toggle orphans 

 if flag(orphans) 
    exposed-modules:
       Enumerate.Orphans.Large

 if flag(orphans) && impl(ghc >= 8.0) && impl(ghc <= 8.4)
    exposed-modules:
       Enumerate.Orphans.GHC
       
 -- if impl(ghc >= 8.0) && impl(ghc <= 8.4)
 --    exposed-modules:
 --       Enumerate.Orphans.GHC
 --       Enumerate.Orphans.Large
 -- else   
 --    exposed-modules:
 --       Enumerate.Orphans.Large

 exposed-modules:
  Enumerate
  Enumerate.Types
  Enumerate.Enum
  Enumerate.Cardinality
  Enumerate.Between
  Enumerate.Modular

  Enumerate.Example
  Enumerate.Test
  Enumerate.Extra

  -- Enumerate.Domain
  -- Data.CoRec
  -- Data.CoRec.MemoTrie
  -- Data.TEnumerate

 build-depends:
               base >= 4.7 && < 5
             , spiros             >=0.2

             , ghc-prim >=0.3
             , array >=0.5
             , template-haskell  >=2.9
             , containers >=0.5

   -- , modular-arithmetic==1.2.*
             , vinyl >=0.5
             , deepseq >= 1.3

 default-language:    Haskell2010
 default-extensions: AutoDeriveTypeable DeriveDataTypeable
                     DeriveGeneric DeriveFunctor DeriveFoldable DeriveTraversable
                     NoImplicitPrelude
 other-extensions: ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveGeneric ExplicitNamespaces FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving KindSignatures LambdaCase RankNTypes ScopedTypeVariables TupleSections TypeFamilies TypeOperators UndecidableInstances
                     
 ghc-options:
             -Wall
              -fno-warn-unticked-promoted-constructors

 -- stack build --flag enumerate:dump-core 
 if flag(dump-core)
  build-depends: dump-core
  ghc-options: -fplugin=DumpCore -fplugin-opt DumpCore:core

-- $ stack build && stack exec example-enumerate
executable example-enumerate

 main-is:             Main.hs
 hs-source-dirs:      .

 default-language:    Haskell2010

 build-depends:
     base
   , enumerate


-- $ stack test doctest
test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , enumerate
  , doctest
  --, cabal-info

-- -- $ stack test unittest
-- test-suite unittest
--  hs-source-dirs:      tests
--  main-is:             UnitTest.hs
--  type:                exitcode-stdio-1.0

--  default-language:    Haskell2010
--  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

--  other-modules:
--   Enumerate.Test

--  build-depends:
--     base
--   , enumerate
--   , hspec ==2.2.*
--   , QuickCheck ==2.8.*
--   , smallcheck ==1.1.*
--   -- , tasty
--   -- , tasty-quickcheck
--   -- , tasty-hunit

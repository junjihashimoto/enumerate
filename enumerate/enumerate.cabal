cabal-version:       2.4
                     -- ^ for « common » stanzas,

build-type:          Simple

--------------------------------------------------

name:                enumerate
version:             0.2.3
                     -- ^ ❲ A.B.C.D ❳:
                     --
                     -- • ❲ A.B ❳ is the MajorVersion,
                     -- • ❲ C ❳ is the MinorVersion,
                     -- • ❲ D ❳ is a PatchVersion.

-- x-revision:          1

--------------------------------------------------
-- Information -----------------------------------
--------------------------------------------------

synopsis:    Enumerate all the values in a finite type (automatically)

description: Provides: 
             .
                 * (1) A typeclass for enumerating all values in a finite type,
                 * (2) A generic instance for automatic deriving, and
                 * (3) Helpers that reify functions (partial or total, monadic or pure)
                       into a Map.
             .
             See the "Enumerable" module for extensive documentation.
             .

category:    Data

--------------------------------------------------

author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
homepage:            https://github.com/sboosali/enumerate

--------------------------------------------------

tested-with: GHC == 8.6.1
           , GHC == 8.4.3
           , GHC == 8.2.2
           , GHC == 8.0.2
           , GHC == 7.10.3

-- `multi-ghc-travis` uses `Tested-With`. 
-- ..\multi-ghc-travis\make_travis_yml.hs enumerate.cabal > .travis.yml

--------------------------------------------------

license:             BSD-4-Clause
copyright:           2018 Sam Boosalis
license-file:        LICENSE

--------------------------------------------------

extra-source-files: README.md

--data-files:
--  data/

--------------------------------------------------

source-repository head
  type:     git
  location: https://github.com/sboosali/enumerate
  subdir:   enumerate

--------------------------------------------------
-- Flags -----------------------------------------
--------------------------------------------------

-- You can disable the doctests test suite with -f-test-doctest.

flag test-doctest
  default:     False
  description: Run the doctests (with the eponymous `doctest`), called the `test documentation` unit (in this cabal file). 
  manual:      True

--------------------------------------------------

-- You can disable the HUnit test suite with -f-test-unit. 

flag test-unit
  default:     False
  description: Run the unit tests, called the `test unit` unit (in this cabal file).  
  manual:      True

--------------------------------------------------

-- -- You can disable the QuickCheck test suite with -f-test-properties. 

-- flag test-properties
--   default:     False
--   description: Run the property tests (i.e. QuickCheck), called the `test properties` unit (in this cabal file).  
--   manual:      True

--------------------------------------------------

flag orphans
  default:     False
  description: Implement orphan instances for some types in `base`. Either way, they are not exported by default (by the root module).
  manual:      True

--------------------------------------------------

flag dump-core
  default:     False
  description: Dump HTML for the core generated by GHC during compilation
  manual:      True

--------------------------------------------------

flag development
  default:     False
  description: Dynamic checking and exposed internals (for development).
  manual:      True

--------------------------------------------------
-- Common Stanzas --------------------------------
--------------------------------------------------

common Haskell2020Library

 ------------------------------

 default-language: Haskell2010
 
 ------------------------------
 
 -- build-depends: base-noprelude >=4.10 && <5

 ------------------------------

 ghc-options:

  --------------------
  -- warning groups
  --------------------

             -Wall

  --------------------
  -- disabled warnings
  --------------------

             -Wno-unticked-promoted-constructors

  --------------------
  -- enabled warnings
  --------------------

             -fwarn-name-shadowing
             -fwarn-tabs
              
  --------------------
  -- (miscellaneous warnings)
  --------------------

  -- raise a warning into an error
  -- -Werror=missing-fields

 ------------------------------
 
 if impl(ghc >= 8.0)
    ghc-options:

        --------------------
        -- warning groups
        --------------------

                -Wcompat
      
        --------------------
        -- disabled warnings
        --------------------

                -fno-warn-redundant-constraints

        --------------------
        -- enabled warnings
        --------------------

                -Wnoncanonical-monad-instances
                -Wnoncanonical-monadfail-instances

                -Wincomplete-record-updates
                -Wincomplete-uni-patterns

                -Wmissing-methods
                -Widentities

                -- -Wmissing-exported-signatures
                -- -Whi-shadowing

        --------------------

                -Wtyped-holes

 ------------------------------
  
 if flag(development) && impl(ghc >= 8.0)
 
    ghc-options: -fdefer-typed-holes
                 -- ^ Use `typed-holes`, not `undefined`, during development.

 ------------------------------
  
 if impl(ghc >= 8.2)
    ghc-options:

        --------------------
        -- enabled warnings
        --------------------

                -Wcpp-undef

                -Wmissing-home-modules

                -Wunbanged-strict-patterns

 ------------------------------

 default-extensions:

   --------------------
   -- "controversial"
   --------------------
                    NoImplicitPrelude

   --------------------
   -- `deriving`
   --------------------
                    AutoDeriveTypeable
                    DeriveDataTypeable
                    DeriveGeneric
                    DeriveFunctor
                    DeriveFoldable
                    DeriveTraversable
                    DeriveLift
                    StandaloneDeriving

                    DerivingStrategies
                    DeriveAnyClass
                    GeneralizedNewtypeDeriving

   --------------------
   -- syntax
   --------------------
                    PackageImports
                    LambdaCase
                    EmptyCase
                    TypeOperators
                    PostfixOperators
                    BangPatterns
                    KindSignatures
                    NamedFieldPuns
                    RecordWildCards
                    TupleSections
                    MultiWayIf
                    DoAndIfThenElse
                    EmptyDataDecls
                    InstanceSigs
                       
   --------------------
   -- typeclasses
   --------------------
                    MultiParamTypeClasses
                    FlexibleContexts
                    FlexibleInstances
                    TypeFamilies
                    FunctionalDependencies

   --------------------
   -- patterns
   --------------------
                    ViewPatterns
                    PatternSynonyms

   --------------------
   -- (miscellaneous)
   --------------------
                    ScopedTypeVariables

 ------------------------------

 other-extensions:

   --------------------
   -- macros
   --------------------
                  TemplateHaskell
   -- QuasiQuotes

   --------------------
   -- syntax (of literals)
   --------------------
                  OverloadedStrings
                  OverloadedLists

   --------------------
   -- (miscellaneous)
   --------------------

   -- RebindableSyntax
   -- kinds:
   -- DataKinds ConstraintKinds
   -- harmful to inference:
   -- GADTs RankNTypes
   -- (miscellaneous)

--------------------------------------------------

common Haskell2020Program

 import: Haskell2020Library

 ------------------------------

 ghc-options:
 
   --------------------
   -- Compilation -----
   --------------------
 
             -O2

   --------------------
   -- Runtime ---------
   --------------------
 
             -threaded
             -rtsopts -with-rtsopts=-N             
 
   --------------------
   -- Warnings --------
   --------------------
 
             -Wno-missing-signatures
             -fno-warn-type-defaults
             
 ------------------------------

--------------------------------------------------
-- Library ---------------------------------------
--------------------------------------------------

library

------------------------------

 hs-source-dirs: sources

------------------------------

 exposed-modules:
                 Enumerate

                 Enumerate.Types
                 Enumerate.Enum
                 Enumerate.Cardinality
                 Enumerate.Between
                 Enumerate.Modular

                 Enumerate.Extra
                 Enumerate.Compatibility

                 Enumerate.Example
                 Enumerate.Test

  -- Enumerate.Domain
  -- Data.CoRec
  -- Data.CoRec.MemoTrie
  -- Data.TEnumerate

------------------------------

--TODO toggle orphans 

 if flag(orphans) 
    exposed-modules:
                    Enumerate.Orphans.Large

------------------------------

 if flag(orphans) && impl(ghc >= 8.0) && impl(ghc <= 8.2)
    exposed-modules:
                    Enumerate.Orphans.GHC       

------------------------------

 build-depends:

               base >= 4.7 && < 5

               ---base             >= 4.7 && < 5
               ---base-noprelude   >= 4.7 && < 5

             , spiros           >=0.2
             , ghc-prim         >=0.3
             , array            >=0.5
             , template-haskell >=2.9
             , containers       >=0.5
             , vinyl            >=0.5
             , deepseq          >= 1.3
-- , modular-arithmetic==1.2.*

------------------------------

 default-language: Haskell2010

 default-extensions:
                    AutoDeriveTypeable
                    DeriveDataTypeable
                    DeriveFoldable
                    DeriveFunctor
                    DeriveGeneric
                    DeriveTraversable
                    NoImplicitPrelude
                    PackageImports

 other-extensions:
                  ConstraintKinds
                  DataKinds
                  DefaultSignatures
                  DeriveAnyClass
                  DeriveDataTypeable
                  DeriveGeneric
                  ExplicitNamespaces
                  FlexibleContexts
                  FlexibleInstances
                  GADTs
                  GeneralizedNewtypeDeriving
                  KindSignatures
                  LambdaCase
                  RankNTypes
                  ScopedTypeVariables
                  TupleSections
                  TypeFamilies
                  TypeOperators
                  UndecidableInstances

------------------------------

 if impl(ghc >= 8.0)

 if impl(ghc >= 8.2)
    default-extensions: 

 if impl(ghc >= 8.4)
    default-extensions: DerivingStrategies

 if impl(ghc >= 8.6)
    default-extensions: NoStarIsType

------------------------------

 -- cabal new-build -fdump-core 
 -- stack build --flag enumerate:dump-core 
 if flag(dump-core)
  build-depends: dump-core
  ghc-options: -fplugin=DumpCore -fplugin-opt DumpCore:core

 ------------------------------

 include-dirs:     include
 install-includes: include/sboo-base-feature-macros.h

------------------------------

  -- raise a warning into an error
  -- -Werror=missing-fields

 -- if impl(ghc >= 8.0) && impl(ghc <= 8.4)
 --    exposed-modules:
 --       Enumerate.Orphans.GHC
 --       Enumerate.Orphans.Large
 -- else   
 --    exposed-modules:
 --       Enumerate.Orphans.Large

------------------------------

--------------------------------------------------
-- Tests -----------------------------------------
--------------------------------------------------

test-suite doctest
 if (!flag(test-doctest) || impl(ghcjs))
    buildable: False
    -- (`ghcjsi` just doesn't work? or `doctest` needs the GHC API?)

 hs-source-dirs:      test
 main-is:             DocTests.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
               base
             , enumerate
             , doctest
  --, cabal-info

--------------------------------------------------

test-suite unit
 if !flag(test-unit)
    buildable: False

 hs-source-dirs:      test
 main-is:             UnitTests.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
               Enumerate.Test

 build-depends:
               base
             , enumerate
             , hspec      >=2.2
             , QuickCheck >=2.8
             , smallcheck >=1.1
  -- , tasty
  -- , tasty-quickcheck
  -- , tasty-hunit

--------------------------------------------------
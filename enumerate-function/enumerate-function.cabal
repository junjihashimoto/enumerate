cabal-version:       2.4
build-type:          Simple

--------------------------------------------------

name:                enumerate-function
version:             0.2.3

--------------------------------------------------
-- Information -----------------------------------
--------------------------------------------------

synopsis:    Invert functions via enumeration

description: Invert functions by brute-force, enumerating their domain.
             .
             Once a function is "reified" into its inputs\/outputs, we can check properties like:
             .
             * Totality
             * Injectivity
             * Surjectivity
             .
             See the "Enumerate.Function" module for examples for documentation.
             .
             (The <https://hackage.haskell.org/package/enumerate @enumerate@> package,
             a (version-locked) dependency, provides a generalized @Enum@,
             which is used to brute-force all inputs of a function)
             .

category:    Data

--------------------------------------------------

author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
homepage:            https://github.com/sboosali/enumerate

--------------------------------------------------

tested-with: GHC == 8.6.1
           , GHC == 8.4.3
           , GHC == 8.2.2
           , GHC == 8.0.2
--           , GHC == 7.10.3

--------------------------------------------------

license:             BSD-4-Clause
copyright:           2018 Sam Boosalis
license-file:        LICENSE

--------------------------------------------------

extra-source-files: README.md
                    .travis.yml
                    HLint.hs
                    stack.yaml

--data-files:
--  data/

--------------------------------------------------

source-repository head
  type:     git
  location: https://github.com/sboosali/enumerate
  subdir:   enumerate-function

--------------------------------------------------
-- Flags -----------------------------------------
--------------------------------------------------

--------------------------------------------------
-- Library ---------------------------------------
--------------------------------------------------

library

------------------------------

 hs-source-dirs: sources
 
------------------------------

 exposed-modules:
                 Enumerate.Function
                 Enumerate.Function.Types
                 Enumerate.Function.Map
                 Enumerate.Function.Reify
                 Enumerate.Function.Invert

                 Enumerate.Orphans.Function

 -- (for doctest / haddocks / exectuable) other-modules:
                 Enumerate.Function.Extra
                 Enumerate.Function.Example

------------------------------

 build-depends:
               base >=4.7 && <5

             , enumerate 
   -- >=0.2.2

             , containers >=0.5


             , semigroups >=0.18
             , exceptions >=0.8
             , MemoTrie >=0.6
             , deepseq >= 1.3

  -- ,
  -- , transformers
  -- , mtl
  -- , bytestring
  -- , stm
  -- , template-haskell

  -- ,
  -- , lens
  -- , exceptions
  -- , free
  -- , bifunctors
  -- , profunctors
  -- , either
  -- , pipes
  -- , formatting
  -- , servant
  -- , Earley
  -- , split
  -- , interpolatedstring-perl6
  -- , wl-pprint-text
  -- , text
  -- , aeson
  -- , hashable
  -- , unordered-containers
  -- , async
  -- , parallel

------------------------------

 ghc-options:         -Wall -fno-warn-unticked-promoted-constructors

------------------------------

 default-language: Haskell2010

 default-extensions: AutoDeriveTypeable
                     BangPatterns
                     DeriveDataTypeable
                     DeriveFoldable
                     DeriveFunctor
                     DeriveGeneric
                     DeriveTraversable
                     DoAndIfThenElse
                     EmptyCase
                     EmptyDataDecls
                     FlexibleContexts
                     FlexibleInstances
                     FunctionalDependencies
                     KindSignatures
                     LambdaCase
                     MultiParamTypeClasses
                     MultiWayIf
                     NamedFieldPuns
                     PostfixOperators
                     RecordWildCards
                     ScopedTypeVariables
                     StandaloneDeriving
                     TupleSections
                     TypeFamilies
                     TypeOperators
                     ViewPatterns

------------------------------

--------------------------------------------------
-- Programs --------------------------------------
--------------------------------------------------

executable example-enumerate-function

 hs-source-dirs:      executables
 main-is:             Main.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
               base
             , enumerate-function

-- $ stack build && stack exec -- example-enumerate-function

--------------------------------------------------
-- Tests -----------------------------------------
--------------------------------------------------

test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
               base
             , enumerate-function
             , doctest

-- $ stack test doctest

--------------------------------------------------

test-suite unittest

 hs-source-dirs:      tests
 main-is:             UnitTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
               Enumerate.Test

 build-depends:
               base
             , enumerate-function
             , hspec ==2.2.*
             , QuickCheck ==2.8.*
  -- , tasty
  -- , tasty-quickcheck

-- $ stack test unittest

--------------------------------------------------
-- Benchmarks ------------------------------------
--------------------------------------------------

benchmark command
 hs-source-dirs:      benchmarks
 main-is:             Bench.hs
 type:                exitcode-stdio-1.0

 default-language: Haskell2010
 ghc-options:      -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
               base
             , enumerate-function
             , criterion
             , deepseq

-- $ stack bench

--------------------------------------------------